// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Retail.Data.Database;

namespace Retail.Data.Migrations
{
    [DbContext(typeof(EkoDataContext))]
    [Migration("20200317094221_UpdatedModels")]
    partial class UpdatedModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Retail.Data.Models.Agent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgentGroupId");

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Email");

                    b.Property<string>("IdentityId");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Region");

                    b.HasKey("Id");

                    b.HasIndex("AgentGroupId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Retail.Data.Models.AgentGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AgentGroups");
                });

            modelBuilder.Entity("Retail.Data.Models.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Retail.Data.Models.Business", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgentId");

                    b.Property<long>("CurrencyId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Email");

                    b.Property<string>("IdentityId");

                    b.Property<string>("InvoiceFootNote");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.Property<string>("PINNumber");

                    b.Property<string>("PhysicalAddress");

                    b.Property<long>("PlanId");

                    b.Property<string>("PostalAddress");

                    b.Property<string>("QuotationFootNote");

                    b.Property<string>("ReceiptFootNote");

                    b.Property<string>("Slogan");

                    b.Property<string>("Social");

                    b.Property<int>("Status");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlanId");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("Retail.Data.Models.BusinessAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BusinessId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BusinessAccounts");
                });

            modelBuilder.Entity("Retail.Data.Models.BusinessBranch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BusinessId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.ToTable("BusinessBranches");
                });

            modelBuilder.Entity("Retail.Data.Models.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Retail.Data.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BusinessAccountId");

                    b.Property<string>("Email");

                    b.Property<string>("IdNumber");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PhysicalAddress");

                    b.Property<string>("PostalAddress");

                    b.Property<int>("Status");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.HasIndex("BusinessAccountId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Retail.Data.Models.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<long>("BusinessBranchId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("JournalType");

                    b.Property<string>("Notes");

                    b.Property<int>("TransactionAccount");

                    b.Property<int>("TransactionType");

                    b.Property<DateTime>("Transactiondate");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Retail.Data.Models.Inventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Quantity");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Retail.Data.Models.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<long>("BusinessAccountId");

                    b.Property<long>("BusinessBranchId");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("InvoiceNumber");

                    b.Property<int>("InvoiceStage");

                    b.Property<int>("InvoiceStatus");

                    b.Property<DateTime>("LastUpdateDateTime");

                    b.Property<long>("PaymentId");

                    b.HasKey("Id");

                    b.HasIndex("BusinessAccountId");

                    b.HasIndex("BusinessBranchId");

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Retail.Data.Models.InvoiceLineItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InvoiceId");

                    b.Property<long>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLineItems");
                });

            modelBuilder.Entity("Retail.Data.Models.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("InvoiceId");

                    b.Property<int>("PaymentType");

                    b.Property<long>("ReceiptId");

                    b.Property<string>("TransactedBy");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<string>("TransactionNumber");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Retail.Data.Models.Plan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Retail.Data.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BusinessId");

                    b.Property<decimal>("BuyingPrice");

                    b.Property<string>("Code");

                    b.Property<long>("InventoryId");

                    b.Property<int>("InventoryType");

                    b.Property<string>("Name");

                    b.Property<int>("ProductType");

                    b.Property<decimal>("SellingPrice");

                    b.Property<int>("Status");

                    b.Property<string>("SupplierId");

                    b.Property<long>("TaxId");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("InventoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Retail.Data.Models.Receipt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance");

                    b.Property<decimal>("InvoiceAmount");

                    b.Property<decimal>("Paid");

                    b.Property<long>("PaymentId");

                    b.Property<string>("ReceiptNumber");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("Retail.Data.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Retail.Data.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartId");

                    b.Property<int>("ProductId");

                    b.Property<long?>("ProductId1");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId1");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Retail.Data.Models.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BusinessId");

                    b.Property<string>("Email");

                    b.Property<string>("IdNumber");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PhysicalAddress");

                    b.Property<string>("PostalAddress");

                    b.Property<int>("Status");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Retail.Data.Models.Tax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BusinessId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.Property<decimal>("Rate");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("Retail.Data.Models.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InvoiceId");

                    b.Property<int>("JournalType");

                    b.Property<int>("TransactionAccount");

                    b.Property<int>("TransactionType");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Retail.Data.Models.UserProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdentityId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Retail.Data.Models.Agent", b =>
                {
                    b.HasOne("Retail.Data.Models.AgentGroup", "AgentGroup")
                        .WithMany("Agents")
                        .HasForeignKey("AgentGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.Business", b =>
                {
                    b.HasOne("Retail.Data.Models.Agent", "Agent")
                        .WithMany("Businesses")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Retail.Data.Models.Currency", "Currency")
                        .WithMany("Businesses")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Retail.Data.Models.Plan", "Plan")
                        .WithMany("Businesses")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.BusinessBranch", b =>
                {
                    b.HasOne("Retail.Data.Models.Business", "Business")
                        .WithMany("BusinessBranches")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.Customer", b =>
                {
                    b.HasOne("Retail.Data.Models.BusinessAccount", "BusinessAccount")
                        .WithMany()
                        .HasForeignKey("BusinessAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.Invoice", b =>
                {
                    b.HasOne("Retail.Data.Models.BusinessAccount", "BusinessAccount")
                        .WithMany()
                        .HasForeignKey("BusinessAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Retail.Data.Models.BusinessBranch")
                        .WithMany("Invoices")
                        .HasForeignKey("BusinessBranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Retail.Data.Models.Payment", "Payment")
                        .WithOne("Invoice")
                        .HasForeignKey("Retail.Data.Models.Invoice", "PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.InvoiceLineItem", b =>
                {
                    b.HasOne("Retail.Data.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLineItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.Product", b =>
                {
                    b.HasOne("Retail.Data.Models.Business", "Business")
                        .WithMany("Products")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Retail.Data.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.Receipt", b =>
                {
                    b.HasOne("Retail.Data.Models.Payment", "Payment")
                        .WithMany("Receipts")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("Retail.Data.Models.ShoppingCart", "Cart")
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Retail.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1");
                });

            modelBuilder.Entity("Retail.Data.Models.Tax", b =>
                {
                    b.HasOne("Retail.Data.Models.Business", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Retail.Data.Models.Transaction", b =>
                {
                    b.HasOne("Retail.Data.Models.Invoice", "Invoice")
                        .WithMany("Transactions")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
